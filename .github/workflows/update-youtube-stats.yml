name: Update YouTube Statistics

on:
  schedule:
    # Täglich um 06:00 UTC (08:00 Uhr deutscher Zeit Sommer / 07:00 Winter)
    - cron: '0 6 * * *'
  
  # Erlaubt manuelles Triggern über GitHub UI
  workflow_dispatch:

jobs:
  update-stats:
    runs-on: ubuntu-latest
    
    # Permissions für GITHUB_TOKEN
    permissions:
      contents: write        # Erlaubt Commit und Push
      pull-requests: write   # Für Pull Request Erstellung (falls Branch Protection aktiv)
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install Dependencies
        run: |
          pip install google-api-python-client python-dotenv
      
      - name: Update YouTube Statistics
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
        run: |
          # Prüfe ob API-Key gesetzt ist
          if [ -z "${YOUTUBE_API_KEY}" ]; then
            echo "❌ YOUTUBE_API_KEY secret ist nicht gesetzt!"
            echo ""
            echo "📋 Setup-Anleitung:"
            echo "1. Gehe zu: https://github.com/${{ github.repository }}/settings/secrets/actions"
            echo "2. Klicke 'New repository secret'"
            echo "3. Name: YOUTUBE_API_KEY"
            echo "4. Value: Dein YouTube API Key"
            echo "5. Klicke 'Add secret'"
            echo ""
            echo "📚 Dokumentation: tools/README_YOUTUBE_STATS.md"
            exit 1
          fi
          
          # Zeige dass API-Key verfügbar ist (ohne Wert zu zeigen)
          echo "✅ YOUTUBE_API_KEY ist gesetzt (${#YOUTUBE_API_KEY} Zeichen)"
          echo ""
          
          # Führe Update aus
          python3 tools/update_youtube_stats.py
      
      - name: Check for Changes
        id: git-check
        run: |
          git diff --exit-code README.md || echo "changed=true" >> $GITHUB_OUTPUT
      
      - name: Commit and Push Changes
        if: steps.git-check.outputs.changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Erstelle Branch für die Änderungen
          BRANCH_NAME="youtube-stats-update-$(date +%Y%m%d-%H%M%S)"
          git checkout -b "$BRANCH_NAME"
          
          git add README.md
          git commit -m "docs: Update YouTube video statistics [skip ci]"
          
          # Pushe Branch
          git push origin "$BRANCH_NAME"
          
          # Versuche direkten Push auf main (falls erlaubt)
          git checkout main
          git pull --rebase origin main
          
          if git push origin main; then
            echo "✅ Direkter Push auf main erfolgreich"
            # Lösche temporären Branch
            git push origin --delete "$BRANCH_NAME" || true
          else
            echo "❌ Direkter Push fehlgeschlagen - Branch Protection aktiv"
            echo "📋 Branch '$BRANCH_NAME' wurde erstellt"
            echo "� Bitte manuell mergen oder Branch Protection für GitHub Actions deaktivieren"
            echo ""
            echo "🔗 Merge-Link: https://github.com/${{ github.repository }}/compare/$BRANCH_NAME?expand=1"
            echo "📖 Setup-Anleitung: .github/BRANCH_PROTECTION_SETUP.md"
          fi
      
      - name: Summary
        run: |
          echo "## 📊 YouTube Stats Update" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.git-check.outputs.changed }}" == "true" ]; then
            echo "✅ README.md wurde aktualisiert" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "ℹ️ **Hinweis:** Falls Branch Protection aktiv ist, wurde ein Branch erstellt." >> $GITHUB_STEP_SUMMARY
            echo "Bitte manuell mergen oder GitHub Actions von den Branch Protection Rules ausnehmen." >> $GITHUB_STEP_SUMMARY
          else
            echo "ℹ️ Keine Änderungen - README.md bereits aktuell" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🕐 Nächste Ausführung: Morgen um 06:00 UTC" >> $GITHUB_STEP_SUMMARY
